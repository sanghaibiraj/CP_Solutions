// problem link: https://codeforces.com/contest/1997/problem/D
// Problem Name: D. Maximize the Root
// Contest Name: Educational Codeforces Round 168
// Div: 2

// Problem tags: binary search, dfs and similar, dp, greedy, trees
// difficulty: *1500

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

const lil N = 1e6+10;
vector<lil> g[N];
vector<lil> wt(N);

void dfs(lil v, lil par){
    lil mn=1e15;
    for(auto child: g[v]){
        if(child==par) continue;
        dfs(child, v);
        mn = min(mn,wt[child]);
    }
    if(mn<1e15){
        if(v==0) wt[v]+=mn;
        else if(wt[v]<mn) wt[v] = (wt[v]+mn)/2;
        else wt[v]=mn;
    }
}

void solve(){
    lil n;
    cin >> n;
    ain(i,wt,n);
    fi(i,1,n){
        lil x;
        cin >> x;
        x--;
        g[i].push_back(x);
        g[x].push_back(i);
    }
    dfs(0, -1);
    cout(wt[0]);
    wt.clear();
    fi(i,0,n) g[i].clear();
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
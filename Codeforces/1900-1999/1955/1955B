// problem link: https://codeforces.com/contest/1955/problem/B
// Problem Name: B. Progressive Square
// Contest Name: Codeforces Round 938
// Div: 3

// Problem tags: constructive algorithms, data structures, implementation, sortings
// difficulty: *1000

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    lil n,c,d;
    cin >> n >> c >> d;
    lil a[n*n];
    ain(i,a,n*n);
    vector<lil> v;
    sort(a,a+n*n);
    // fi(i,0,n*n) cout << a[i] << " ";
    // cout << endl;
    fi(i,0,n){
        fi(j,0,n){
            v.push_back(a[0]+i*c+j*d);
        }
    }
    sort(v.begin(), v.end());
    fi(i,0,n*n){
        // cout << a[i] << " " << v[i] << endl;
        if(a[i]!=v[i]){coutn; return;}
    }
    couty;
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
// problem link: https://codeforces.com/contest/1984/problem/C1
// Problem Name: C1. Magnitude (Easy Version)
// Contest Name: Codeforces Global Round 26

// Problem tags: implementation, math
// difficulty: *1100

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

// // map<lil,lil> mp;
// lil ans = 0ll;

// void calc(vector<lil>& v, lil c, lil i){
//     if(i==v.size()){
//         // mp[abs(c+v[i])]++;
//         ans = max(ans, abs(c));
//         return;
//     }
//     if(c>=0){
//         while(c>=0 && i<v.size()-1){
//             c+=v[i];
//             i++;
//         }      
//     }
//     while(v[i]<0 && i<v.size()-1){
//         c+=v[i];
//         i++;
//     }
//     // if(c<0 && v[i]>0) c += v[i];
//     // cout(c);
//     calc(v,c+v[i],i+1);
//     calc(v, abs(c)+v[i], i+1);
// }

void solve(){
    lil n;
    cin >> n;
    vector<lil> v(n);
    ain(i,v,n);
    vector<lil> v1(1,0);
    vector<lil> v2(1,0);
    fi(i,0,n){
        v1.push_back(v1.back()+v[i]);
        v2.push_back(max(abs(v1.back()), v2.back()+v[i]));
    }
    cout(v2.back());
    // lil mx=-1;
    // calc(v, 0ll, 0ll);
    // // for(auto it: mp) mx = max(mx,it.first);
    // // mp.clear();
    // cout(ans);
    // ans=0ll;
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
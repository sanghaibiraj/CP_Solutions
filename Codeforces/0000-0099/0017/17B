// problem link: https://codeforces.com/contest/17/problem/B
// Problem Name: B. Hierarchy
// Contest Name: Codeforces Beta Round 17

// Problem tags: dfs and similar, dsu, greedy, shortest paths
// difficulty: *1500

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    int n;
    cin >> n;
    int q[n];
    ain(i,q,n);
    int m;
    cin >> m;
    map<int, int> mp;
    fi(i,0,m){
        int a,b,c;
        cin >> a >> b >> c;
        if(mp.find(b)==mp.end()){
            mp[b]=c;
        }
        else{
            if(c<mp[b]) mp[b]=c;
        }
    }
    if(mp.size()<n-1) cout(-1);
    else{
        int ans=0;
        for(auto it: mp){
            ans += it.second;
        }
        cout(ans);
    }
}
int main() {
        int t=1;
        while(t--){
            solve();
        }
}
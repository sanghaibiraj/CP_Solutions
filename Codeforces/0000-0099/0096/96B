// problem link: https://codeforces.com/contest/96/problem/B
// Problem Name: B. Lucky Numbers (easy)
// Contest Name: Codeforces Beta Round 77
// Div: 2

// Problem tags: binary search, bitmasks, brute force
// difficulty: *1300

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

vector<lil> lucky;

void next(lil n, lil f, lil s){
    if(n){
        if(n>1e10+1) return;
        if(f==s) lucky.push_back(n);
    }
    next(n*10+4, f+1, s);
    next(n*10+7, f, s+1);
}

void solve(){
    lil n;
    cin >> n;
    next(0,0,0);
    sort(lucky.begin(), lucky.end());
    lil z = lower_bound(lucky.begin(), lucky.end(), n) - lucky.begin();
    cout(lucky[z]);
}
int main() {
        int t=1;
        while(t--){
            solve();
        }
}
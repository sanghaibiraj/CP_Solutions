// problem link: https://codeforces.com/contest/2008/problem/F
// Problem Name: F. Sakurako's Box
// Contest Name: Codeforces Round 970
// Div. 3

// Problem tags: combinatorics, math, number theory 
// difficulty: *1400

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

const int MOD = 1e9 + 7;

lil power(lil a, lil b){
	lil res =1;
	while(b>0){
		if(b%2==1)
			res = ((res%MOD) * (a%MOD))%MOD;
		a = ((a%MOD)*(a%MOD))%MOD;
		b /= 2;
	}
	return res%MOD;
}

lil MOD_inv(lil a) {
    return power(a, MOD - 2);
}

void solve(){
    lil n;
    cin >> n;
    vector<lil> arr(n);
    lil sum = 0;
    fi(i,0,n){
        cin >> arr[i];
        sum = (MOD + (sum % MOD) + (arr[i] % MOD)) % MOD;
    }
    lil sol = 0;
    fi(i,0,n){
        lil x = (((sum - arr[i]) % MOD) * (arr[i] % MOD)) % MOD;
        sol = (MOD + (sol % MOD) + (x % MOD)) % MOD;
    }
    lil ans = ((sol % MOD) * (MOD_inv(n*(n-1)%MOD) % MOD)) % MOD;
    cout(ans);
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
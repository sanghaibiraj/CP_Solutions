// problem link: https://codeforces.com/contest/505/problem/B
// Problem Name: B. Mr. Kitayuta's Colorful Graph
// Contest Name: Codeforces Round 286
// Div: 2

// Problem tags: dfs and similar, dp,dsu, graphs
// difficulty: *1400

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

const int N = 105;
vector<int> edges[N][N];
vector<int> vis(N,0);

void dfs(int v, int c){
    vis[v]=1;
    for(auto child: edges[v][c]){
        if(vis[child]) continue;
        dfs(child,c);
    }
}

void solve(){
    int n,m;
    cin >> n >> m;
    fi(i,0,m){
        int x,y,c;
        cin >> x >> y >> c;
        edges[x][c].push_back(y);
        edges[y][c].push_back(x);
    }
    int q;
    cin >> q;
    while(q--){
        int l,r,ans=0;
        cin >> l >> r;
        fi(i,1,m+1){
            fi(j,1,n+1) vis[j]=0;
            dfs(l,i);
            if(vis[r]) ans++;
        }
        cout(ans);
    }
}
int main() {
        int t=1;
        while(t--){
            solve();
        }
}
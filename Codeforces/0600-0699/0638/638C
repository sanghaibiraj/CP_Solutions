// problem link: https://codeforces.com/contest/638/problem/C
// Problem Name: C. Road Improvement
// Contest Name: VK Cup 2016 - Qualification Round 2

// Problem tags: *special problem, dfs and similar, graphs, greedy, trees
// difficulty: *1800

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(lil i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

const lil N = 200002;
vector<pair<lil,lil>> gr[N];
vector<lil> ans[N];

void dfs(lil v, lil par, lil day){
    lil d=1ll;
    for(auto child: gr[v]){
        if(par == child.first) continue;
        if(d==day) d++;
        ans[d].push_back(child.second);
        dfs(child.first, v, d);
        d++;
    }
}

void solve(){
    lil n,mx=0;
    cin >> n;
    fi(i,1,n){
        lil x,y;
        cin >> x >> y;
        gr[x].push_back({y,i});
        gr[y].push_back({x,i});
    }
    dfs(1, -1, 0);
    fi(i,1,N){
        if(ans[i].size()>0) mx++;
        else break;
    }
    cout(mx);
    fi(i,1,mx+1){
        cout << ans[i].size() << " ";
        fi(j,0,ans[i].size()) cout << ans[i][j] << " ";
        cout << endl;
    }
}
int main() {
        int t=1;
        while(t--){
            solve();
        }
}
// problem link: https://codeforces.com/contest/1890/problem/C
// Problem Name: C. Qingshan Loves Strings 2
// Contest Name: Codeforces Round 906
// Div. 2

// Problem tags: constructive algorithms, implementation, two pointers
// difficulty: *1300

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    int n, c0=0;
    cin >> n;
    string s;
    cin >> s;
    if(n%2){cout(-1); return;}
    fi(i,0,n){
        if(s[i]=='0') c0++;
    }
    if(c0!=n/2){cout(-1); return;}
    vector<int> ans;
    int front=0, back=n-1;
    while(front<back){
        //cout << front << " " << back << " " << endl;
        if(s[front] != s[back]){front++; back--;}
        else{
            if(s[front]=='1'){
                ans.push_back(front);
                s.insert(front, "01");
                front++; back++; 
            }
            else{
                ans.push_back(back+1);
                s.insert(back+1, "01");
                front++; back++;
            }
        }
    }
    cout(ans.size());
    fi(i,0,ans.size()) cout << ans[i] << " ";
    cout << endl;
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
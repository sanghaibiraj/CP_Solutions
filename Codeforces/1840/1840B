// problem link: https://codeforces.com/contest/1840/problem/B
// Problem Name: B. Binary Cafe
// Contest Name: Codeforces Round 878
// Div: 3

// Problem tags: bitmasks, combinatorics, math
// difficulty: *1100

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

const lil mod = 1000000007;

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

lil power(lil a, lil b){
	lil res =1;
	while(b>0){
		if(b%2==1)
			res = ((res%mod) * (a%mod))%mod;
		a = ((a%mod)*(a%mod))%mod;
		b /= 2;
	}
	return res%mod;
}

void solve(){
    lil n,k,p=1,ans=0;
    cin >> n >> k;
    lil x = log(n)/log(2);
    if(x>=k){
        cout(power(2,k));
        return;
    }
    while(n>0){
        x = log(n)/log(2);
        p = power(2,x);
        ans += p;
        n = n-p;
    }
    cout(ans+1);
}
int main() {
    int t;
    cin >> t;
    while(t--){
        solve();
    }
}
// problem link: https://codeforces.com/contest/1848/problem/B
// Problem Name: B. Vika and the Bridge
// Contest Name: Codeforces Round 885
// Div: 2

// Problem tags: binary search, data structures, greedy, implementation, math, sortings
// difficulty: *1200

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    lil n,k,ans=LONG_LONG_MAX;
    cin >> n >> k;
    lil col[n];
    ain(i,col,n);
    lil last[k+1] = {0};
    lil max1[k+1] = {0};
    lil max2[k+1] = {0};
    fi(i,0,n){
        if(i-last[col[i]]>max1[col[i]]){
            max2[col[i]]=max1[col[i]];
            max1[col[i]]=i-last[col[i]];
        }
        else if(i-last[col[i]]>max2[col[i]]){
            max2[col[i]]=i-last[col[i]];
        }
        last[col[i]] = i+1;
    }
    fi(i,1,k+1){
        if(n-last[i]>max1[i]){
            max2[i]=max1[i];
            max1[i]=n-last[i];
        }
        else if(n-last[i]>max2[i]){
            max2[i] = n-last[i];
        }
    }
    fi(i,1,k+1){
        lil tmp = max(max1[i]/2, max2[i]);
        ans = min(ans,tmp);
    }
    cout(ans);
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
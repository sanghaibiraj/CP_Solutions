// problem link: https://codeforces.com/contest/1948/problem/C
// Problem Name: C. Arrow Path
// Contest Name: Educational Codeforces Round 163
// Div: 2

// Problem tags: brute force, constructive algorithms, dfs and similar, dp, graphs, shortest paths
// difficulty: *1300

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    lil n;
    string s1,s2;
    cin >> n >> s1 >> s2;
    // vector<lil> v1, v2;
    // v1.push_back(0);
    set<lil> s;
    for(int i=1;i<n;i+=2){
        if(s1[i]=='>'){s.insert(i); s.insert(i+1);}
    }
    for(int i=0;i<n;i+=2){
        if(s2[i]=='>'){
            s.insert(i);
            s.insert(i+1);
        }
    }
    if(s.size()==n) couty;
    else coutn;
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
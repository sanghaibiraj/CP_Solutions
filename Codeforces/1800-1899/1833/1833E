// problem link: https://codeforces.com/contest/1833/problem/E
// Problem Name: E. Round Dance
// Contest Name: Codeforces round 874
// div: 3

// Problem tags: dfs and similar, dsu, graphs, shortest paths
// difficulty: *1600

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(lil i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

const lil N = 1000000;
set<lil> gr[N];
vector<bool> vis(N,0);
bool cycle=true;

void dfs(lil v){
    vis[v]=1;
    if(gr[v].size()==1) cycle=false;
    
    for(auto child: gr[v]){
        if(gr[child].size()==1) cycle=false;
        if(vis[child]) continue;
        dfs(child);
    }
}

void solve(){
    lil n, mx=0, mn=0, c=0;
    cin >> n;
    fi(i,1,n+1){
        lil x;
        cin >> x;
        gr[i].insert(x);
        gr[x].insert(i);
    }
    fi(i,1,n+1){
        if(!vis[i]){
            mx++;
            dfs(i);
            if(cycle) c++;
            cycle = true; 
        }
    }
    // cout << c << " " << mx << endl;
    cout << c + min(mx-c,1ll) << " " << mx << endl;
    fi(i,0,n+1){gr[i].clear(); vis[i]=0;}
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
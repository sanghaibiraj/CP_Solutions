// problem link: https://codeforces.com/contest/1886/problem/B
// Problem Name: B. Fear of the Dark
// Contest Name: Educational Codeforces Round 156
// Div. 2

// Problem tags: binary search, geometry, math
// difficulty: *1200

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    double px,py,ax,ay,bx,by;
    cin >> px >> py >> ax >> ay >> bx >> by;
    double oa = sqrt(ax*ax+ay*ay);
    double ob = sqrt(bx*bx+by*by);
    double pa = sqrt((ax-px)*(ax-px)+(ay-py)*(ay-py));
    double pb = sqrt((bx-px)*(bx-px)+(by-py)*(by-py));
    double ab = sqrt((ax-bx)*(ax-bx)+(ay-by)*(ay-by));

    double ans = min(max(oa,pa),max(ob,pb));
    // if(2*oa<=ab && 2*pb<=ab) ans = min(ans,ab/2);
    // if(2*pa<=ab && 2*ob<=ab) ans = min(ans,ab/2);
    if((2*max(oa,pb)<ab) || 2*max(pa,ob)<ab){ ans = min(ans,ab/2);}
    else ans = min3(ans,max(oa,pb),max(pa,ob));

    cout(setprecision(11) << ans);
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}
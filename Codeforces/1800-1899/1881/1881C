// problem link: https://codeforces.com/contest/1881/problem/C
// Problem Name: C. Perfect Square
// Contest Name: Codeforces Round 903
// Div. 3

// Problem tags: brute force, implementation
// difficulty: *1200

// Solution:

/* <________--BIRAJ01--________> */

#include <bits/stdc++.h>
#include <iostream>

#define lil long long int

#define couty cout << "YES" << endl
#define coutn cout << "NO" << endl
#define cout(a) cout << a << endl

#define min3(a,b,c) (a<b && a<c)?a:(b<c)?b:c
#define max3(a,b,c) (a>b && a>c)?a:(b>c)?b:c

#define fi(i,s,e) for(int i=s;i<e;i++)
#define fd(i,s,e) for(int i=s;i>e;i--)

#define ain(i,arr,n); for(int i=0;i<n;i++){ cin >> arr[i]; }
#define aout(i,arr,n); for(int i=0;i<n;i++){ cout << arr[i] << "\t"; }

using namespace std;

int gcd(int a,int b){
    if(b==0) return a;
    return gcd(b,a%b);  }

void solve(){
    lil n,mx=0,cnt=0;
    cin >> n;
    char a[n][n];
    fi(i,0,n){
        fi(j,0,n) cin >> a[i][j];
    }
    fi(i,0,n/2){
        fi(j,i,n-1-i){
            mx = max(max(a[i][j],a[j][n-1-i]),max(a[n-1-i][n-1-j],a[n-1-j][i]));
            //cout((char)mx);
            cnt += (mx-a[i][j]) + (mx-a[j][n-1-i]) + (mx-a[n-1-i][n-1-j]) + (mx-a[n-1-j][i]);
            //cout(cnt);
            mx=0;
        }
    }
    cout(cnt);
}
int main() {
        int t;
        cin >> t;
        while(t--){
            solve();
        }
}